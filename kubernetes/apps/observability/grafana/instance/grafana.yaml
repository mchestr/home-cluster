---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/grafana.integreatly.org/grafana_v1beta1.json
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    grafana.internal/instance: grafana
spec:
  config:
    analytics:
      check_for_updates: "false"
      check_for_plugin_updates: "false"
      feedback_links_enabled: "false"
      reporting_enabled: "false"
    auth:
      disable_login_form: "false"
      signout_redirect_url: "https://auth.chestr.dev/logout"
      oauth_auto_login: "true"
    auth.generic_oauth:
      enabled: "true"
      name: Authelia
      scopes: openid profile email groups
      empty_scopes: "false"
      auth_url: https://auth.chestr.dev/api/oidc/authorization
      token_url: https://auth.chestr.dev/api/oidc/token
      api_url: https://auth.chestr.dev/api/oidc/userinfo
      login_attribute_path: preferred_username
      groups_attribute_path: groups
      name_attribute_path: name
      use_pkce: "true"
    auth.generic_oauth.group_mapping:
      role_attribute_path: |
        contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
      org_id: "1"
    auth.anonymous:
      enabled: "true"
    log:
      mode: console
    metrics:
      enabled: "true"
    news:
      news_feed_enabled: "false"
    plugins:
      plugin_admin_enabled: "false"
    security:
      angular_support_enabled: "true"
    server:
      enable_gzip: "true"
      root_url: https://grafana.chestr.dev
  deployment:
    spec:
      strategy:
        type: Recreate
      template:
        spec:
          initContainers:
            - name: 01-init-db
              image: ghcr.io/home-operations/postgres-init:17
              envFrom:
                - secretRef:
                    name: grafana-initdb-secret
          containers:
            - name: grafana
              env:
                - name: GF_SECURITY_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: grafana-admin-password-secret
                      key: GF_SECURITY_ADMIN_PASSWORD
                - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: grafana-auth-secret
                      key: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
                - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: grafana-auth-secret
                      key: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
                - name: GF_DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: grafana-pguser-secret
                      key: user
                - name: GF_DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: grafana-pguser-secret
                      key: password
                - name: GF_DATABASE_NAME
                  value: grafana
                - name: GF_DATABASE_HOST
                  value: postgres17-rw.database.svc.cluster.local:5432
                - name: GF_DATABASE_SSL_MODE
                  value: disable
                - name: GF_DATABASE_TYPE
                  value: postgres
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities: { drop: ["ALL"] }
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: grafana-pvc
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: ceph-block
  disableDefaultSecurityContext: All
