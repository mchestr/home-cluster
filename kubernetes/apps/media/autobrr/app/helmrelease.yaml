---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app autobrr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      autobrr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: autobrr-initdb-secret

        containers:
          app:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.61.0
            envFrom:
              - secretRef:
                  name: autobrr-secret
            resources:
              requests:
                memory: 250Mi
                cpu: 10m
              limits:
                memory: 500Mi
            env:
              AUTOBRR__CHECK_FOR_UPDATES: "false"
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__PORT: &port 7474
              AUTOBRR__LOG_LEVEL: INFO
              # App
              AUTOBRR__DATABASE_TYPE: postgres
              AUTOBRR__POSTGRES_DATABASE:
                valueFrom:
                  secretKeyRef:
                    name: &pguser autobrr-pguser-secret
                    key: db
              AUTOBRR__POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: host
              AUTOBRR__POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: user
              AUTOBRR__POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: password
              AUTOBRR__POSTGRES_PORT:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: port

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: autobrr
        ports:
          http:
            port: *port

    persistence:
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

    route:
      app:
        hostnames: ["{{ .Release.Name }}.chestr.dev"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: autobrr.png
          gethomepage.dev/name: Autobrr
          gethomepage.dev/group: Downloads
          gethomepage.dev/widget.type: autobrr
          gethomepage.dev/widget.url: http://autobrr.media.svc.cluster.local:7474
          gethomepage.dev/widget.key: '{{ "{{HOMEPAGE_VAR_AUTOBRR_API_KEY}}" }}'
        parentRefs:
          - name: internal
            namespace: networking
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
