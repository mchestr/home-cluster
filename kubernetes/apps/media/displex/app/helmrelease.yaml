---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app displex
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch

    controllers:
      displex:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: displex-initdb-secret

        containers:
          app:
            image: &image
              repository: ghcr.io/mchestr/displex
              tag: main@sha256:3d2a674cd177fa131558f73273798dbf7a49fdd342d9493e933c650a9f1d203f
            args:
              - server
            env: &env
              DISPLEX_DATABASE__TYPE: PostgreSQL
              DISPLEX_DATABASE__HOST:
                valueFrom:
                  secretKeyRef:
                    name: displex-pguser-secret
                    key: host
              DISPLEX_DATABASE__PORT:
                valueFrom:
                  secretKeyRef:
                    name: displex-pguser-secret
                    key: port
              DISPLEX_DATABASE__USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: displex-pguser-secret
                    key: user
              DISPLEX_DATABASE__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: displex-pguser-secret
                    key: password
              DISPLEX_DATABASE__DATABASE:
                valueFrom:
                  secretKeyRef:
                    name: displex-pguser-secret
                    key: db
              RUST_LOG: displex=info,sea_orm=info,warn
            resources: &resources
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 20Mi

      bot:
        type: deployment
        containers:
          app:
            args:
              - bot
            image: *image
            env: &envRo
              <<: *env
              DISPLEX_DATABASE__READ_ONLY: "true"
              DISPLEX_DATABASE__HOST:
                valueFrom:
                  secretKeyRef:
                    name: displex-pguser-secret
                    key: ro_host
            resources: *resources

      channel-refresh:
        type: cronjob
        cronjob:
          schedule: "*/10 * * * *"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30
        containers:
          app:
            args:
              - channel-refresh
            env: *envRo
            image: *image
            resources: *resources

      requests-upgrade:
        type: cronjob
        cronjob:
          schedule: "@daily"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30

        containers:
          app:
            args:
              - requests-upgrade
            image: *image
            env: *envRo
            resources: *resources

      token-maintenance:
        type: cronjob
        cronjob:
          schedule: "0 */3 * * *"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30

        containers:
          app:
            args:
              - token-maintenance
            image: *image
            env: *env
            resources: *resources

      user-refresh:
        type: cronjob
        cronjob:
          schedule: "@daily"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30

        containers:
          app:
            args:
              - user-refresh
            image: *image
            env: *envRo
            resources: *resources

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8080

    route:
      app:
        hostnames: ["{{ .Release.Name }}.chestr.dev"]
        parentRefs:
          - name: external
            namespace: networking
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        type: secret
        name: displex-secret
        globalMounts:
          - path: /data/displex.toml
            subPath: displex.toml
