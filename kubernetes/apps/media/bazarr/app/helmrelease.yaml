---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: bazarr-initdb-secret

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.1@sha256:0ac96948fd8dbf1c9d8ffa83ed441d2e77c6fc79f81600c8ea160172cf66740e
            env:
              TZ: America/Vancouver
              POSTGRES_ENABLED: "true"
              POSTGRES_PORT:
                valueFrom:
                  secretKeyRef:
                    name: &pguser bazarr-pguser-secret
                    key: port
              POSTGRES_DATABASE:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: db
              POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: host
              POSTGRES_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: user
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: password
            envFrom:
              - secretRef:
                  name: bazarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 6Gi

          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0@sha256:0330739a707a2969d617e859f096659ab6d149212658ac0ad7e550b59482ebf0
            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /subcleaner
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext: *securityContext

    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65539

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["{{ .Release.Name }}.chestr.dev"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: bazarr.png
          gethomepage.dev/name: Bazarr
          gethomepage.dev/group: Downloads
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.url: http://bazarr.media.svc.cluster.local:6767
          gethomepage.dev/widget.key: '{{ "{{HOMEPAGE_VAR_BAZARR_API_KEY}}" }}'
        parentRefs:
          - name: internal
            namespace: networking
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: *app
      config-cache:
        type: emptyDir
        globalMounts:
          - path: /config/cache
      config-log:
        type: emptyDir
        globalMounts:
          - path: /config/log
      media:
        type: nfs
        server: lochnas.chestr.dev
        path: /volume1/shared/media
        globalMounts:
          - path: /media
      scripts:
        type: configMap
        name: bazarr-scripts
        defaultMode: 0775
        globalMounts:
          - path: /scripts/subcleaner.sh
            subPath: subcleaner.sh
            readOnly: true
      subcleaner:
        type: emptyDir
      tmp:
        type: emptyDir
