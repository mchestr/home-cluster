---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/blakeblackshear/frigate
      tag: 0.12.0

    env:
      TZ: ${TZ}
      LIBVA_DRIVER_NAME: i965

    envFrom:
      - secretRef:
          name: *app

    service:
      main:
        ports:
          http:
            port: &port 5000
          rtsp:
            enabled: true
            port: 8554

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          auth.home.arpa/enabled: "true"
          hajimari.io/icon: mdi:cctv
          hajimari.io/group: home
        hosts:
          - host: &host "{{ .Release.Name }}.chestr.dev"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    securityContext:
      privileged: true

    volumeClaimTemplates:
      - name: config
        mountPath: /data
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: ceph-block

    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-configmap
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true

      media:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: /volume1/shared/frigate
        mountPath: /media

      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        mountPath: /dev/shm

      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        mountPath: /dev/bus/usb

    nodeSelector:
      google.feature.node.kubernetes.io/coral: "true"
      intel.feature.node.kubernetes.io/gpu: "true"

    resources:
      requests:
        gpu.intel.com/i915: "1"
      limits:
        gpu.intel.com/i915: "1"
