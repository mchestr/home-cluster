---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.517@sha256:d84370f20b4d1800ce847594824a49b80a3c03f0bad0856367704dd4cc76cfde

    env:
      TZ: ${TZ}
      PUSHOVER_DEBUG: "false"
      PUSHOVER_APP_URL: "{{ .Release.Name }}.chestr.dev"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      SONARR__APPLICATION_URL: "https://{{ .Release.Name }}.chestr.dev"
      SONARR__LOG_LEVEL: info

    envFrom:
      - secretRef:
          name: *app

    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            port: &metric-port 9794

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          auth.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.chestr.dev/css/base/sonarr/organizr.css"></head>';
            sub_filter_once on;
          hajimari.io/icon: mdi:television-box
          hajimari.io/group: Media Management
        hosts:
          - host: &host "{{ .Release.Name }}.chestr.dev"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      media:
        enabled: true
        type: nfs
        server: "lochnas.chestr.dev"
        path: ${NAS_MEDIA_DIR}
        mountPath: /media
      backup:
        enabled: true
        type: nfs
        server: "lochnas.chestr.dev"
        path: ${NAS_BACKUP_DIR}/sonarr
        mountPath: /config/Backups
      scripts:
        enabled: true
        type: configMap
        name: sonarr-pushover
        subPath: pushover-notify.sh
        mountPath: /scripts/pushover-notify.sh
        defaultMode: 0775
        readOnly: true

    podSecurityContext:
      fsGroup: 65539
      fsGroupChangePolicy: OnRootMismatch

    additionalContainers:
      metrics:
        name: metrics
        image: ghcr.io/onedr0p/exportarr:v1.3.2
        imagePullPolicy: Always
        args: ['s']
        env:
          PORT: *metric-port
          ENABLE_UNKNOWN_QUEUE_ITEMS: true
          TZ: "${TZ}"
          URL: "http://sonarr.default.svc.cluster.local:8989"
          APIKEY:
            valueFrom:
              secretKeyRef:
                name: *app
                key: SONARR__API_KEY

    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
