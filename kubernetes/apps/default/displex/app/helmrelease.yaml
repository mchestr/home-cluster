---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: displex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch

    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "16.2"
            envFrom:
              - secretRef:
                  name: displex-dbinit-secret

        containers:
          main:
            image: &image
              repository: ghcr.io/mchestr/displex
              tag: main@sha256:726ac0322d5a50dcff9aa01979366837e799e7d0e7efd61b612652a14f1652a4
            args:
              - server
            env: &envRw
              DISPLEX_DATABASE__HOST: postgres16-rw.default.svc.cluster.local
            resources: &resources
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 20Mi

      bot:
        type: deployment
        containers:
          main:
            args:
              - bot
            image: *image
            env: &envRo
              DISPLEX_DATABASE__READ_ONLY: "true"
              DISPLEX_DATABASE__HOST: postgres16-ro.default.svc.cluster.local
            resources: *resources

      channel-refresh:
        type: cronjob
        cronjob:
          schedule: "*/5 * * * *"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30
        containers:
          main:
            args:
              - channel-refresh
            env: *envRo
            image: *image
            resources: *resources

      requests-upgrade:
        type: cronjob
        cronjob:
          schedule: "@daily"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30

        containers:
          main:
            args:
              - requests-upgrade
            image: *image
            env: *envRo
            resources: *resources

      token-maintenance:
        type: cronjob
        cronjob:
          schedule: "* */12 * * *"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30

        containers:
          main:
            args:
              - token-maintenance
            image: *image
            env: *envRw
            resources: *resources

      user-refresh:
        type: cronjob
        cronjob:
          schedule: "@daily"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          ttlSecondsAfterFinished: 30

        containers:
          main:
            args:
              - user-refresh
            image: *image
            env: *envRo
            resources: *resources

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.chestr.dev?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          external-dns.alpha.kubernetes.io/target: external.chestr.dev
        hosts:
          - host: &host "{{ .Release.Name }}.chestr.dev"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        type: secret
        name: displex-secret
        readOnly: true
        globalMounts:
          - path: /data/displex.toml
            subPath: displex.toml
