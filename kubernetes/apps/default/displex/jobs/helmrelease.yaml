---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: displex-jobs
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch

    controllers:
      main:
        nameOverride: channel-refresh
        type: cronjob
        cronjob:
          schedule: "*/3 * * * *"
        containers:
          main:
            image: &image
              repository: ghcr.io/mchestr/displex
              tag: main@sha256:7fc75c3627388e1941872a887e68173b47a7782f36341c8e46074f5f15d0750b
            args:
              - channel-refresh
            env: &roEnv
              DISPLEX_DATABASE__READ_ONLY: "true"
              DISPLEX_DATABASE__HOST: postgres-ro.default.svc.cluster.local
            envFrom: &envFrom
              - secretRef:
                  name: displex-secret

      requests-upgrade:
        type: cronjob
        cronjob:
          schedule: "@daily"

        containers:
          main:
            image: *image
            args:
              - requests-upgrade
            env: *roEnv
            envFrom: *envFrom

      token-maintenance:
        type: cronjob
        cronjob:
          schedule: "@hourly"

        containers:
          main:
            image: *image
            args:
              - token-maintenance
            env: &rwEnv
              DISPLEX_DATABASE__HOST: postgres-rw.default.svc.cluster.local
            envFrom: *envFrom

      user-refresh:
        type: cronjob
        cronjob:
          schedule: "@hourly"

        containers:
          main:
            image: *image
            args:
              - user-refresh
            env: *roEnv
            envFrom: *envFrom

    service:
      main:
        enabled: false
