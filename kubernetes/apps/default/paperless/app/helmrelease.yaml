---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false

    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "16.6"
            envFrom:
              - secretRef:
                  name: paperless-dbinit-secret

        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.13.5
            env:
              PAPERLESS_CONSUMER_POLLING: 5
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_PORT: 8000
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenburg.default.svc.cluster.local:3000
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika.default.svc.cluster.local:9998
              PAPERLESS_TIME_ZONE: America/Vancouver
              PAPERLESS_URL: https://{{ .Release.Name }}.chestr.dev
              PAPERLESS_REDIS: redis://paperless-redis.default.svc.cluster.local:6379
              PAPERLESS_SOCIAL_AUTO_SIGNUP: "true"
            envFrom:
              - secretRef:
                  name: paperless-secret
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              runAsNonRoot: false
              runAsUser: ${APP_UID}
              runAsGroup: ${APP_UID}
              fsGroup: 65539
              fsGroupChangePolicy: "Always"
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop:
                  - ALL

      gotenburg:
        containers:
          app:
            image:
              repository: ghcr.io/mchestr/gotenberg
              tag: 8.15.3
            env:
              DISABLE_GOOGLE_CHROME: "1"
            securityContext: *securityContext

      tika:
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
            securityContext: *securityContext

      redis:
        containers:
          app:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.4.2@sha256:cd13b924409d740ea8abe6677a7d1accf696898408d330a3d7c8234fa7545775

    service:
      paperless:
        controller: paperless
        ports:
          http:
            port: &http 8000
      gotenburg:
        controller: gotenburg
        ports:
          http:
            port: 3000
      tika:
        controller: tika
        ports:
          http:
            port: 9998
      redis:
        controller: redis
        ports:
          http:
            port: 6379

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.chestr.dev?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: paperless.png
          gethomepage.dev/name: Paperless
          gethomepage.dev/group: Home
        hosts:
          - host: &host "{{ .Release.Name }}.chestr.dev"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: paperless
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          paperless:
            app:
              - subPath: data
                path: /usr/src/paperless/data
              - subPath: media
                path: /usr/src/paperless/media

    networkpolicies:
      paperless:
        controller: paperless

        policyTypes:
          - Ingress

        rules:
          ingress:
            - from:
                - podSelector:
                    matchLabels:
                      app.kubernetes.io/instance: nginx-internal
                  namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: networking
              ports:
                - protocol: TCP
                  port: *http
