---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: miniflux
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: miniflux

    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "14.9"
            envFrom: &envFrom
              - secretRef:
                  name: miniflux-secret

        containers:
          main:
            image:
              repository: ghcr.io/miniflux/miniflux
              tag: 2.0.48
            env:
              BASE_URL: https://miniflux.chestr.dev
              CREATE_ADMIN: "1"
              DEBUG: "1"
              LOG_DATE_TIME: "1"
              METRICS_ALLOWED_NETWORKS: 10.244.0.0/16
              METRICS_COLLECTOR: "1"
              OAUTH2_CLIENT_ID: miniflux
              OAUTH2_USER_CREATION: "1"
              OAUTH2_OIDC_DISCOVERY_ENDPOINT: https://auth.chestr.dev
              OAUTH2_PROVIDER: oidc
              OAUTH2_REDIRECT_URL: https://miniflux.chestr.dev/oauth2/oidc/callback
              POLLING_SCHEDULER: entry_frequency
              POLLING_FREQUENCY: "15"
              RUN_MIGRATIONS: "1"
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 750Mi
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe
              startup:
                enabled: false

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.chestr.dev
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: MiniFlux
          gethomepage.dev/icon: miniflux.png
          gethomepage.dev/widget.type: miniflux
          gethomepage.dev/widget.url: http://miniflux.default.svc.cluster.local:8080
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_MINIFLUX_API_TOKEN}}"
        hosts:
          - host: &host "{{ .Release.Name }}.chestr.dev"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    serviceMonitor:
      main:
        enabled: true
