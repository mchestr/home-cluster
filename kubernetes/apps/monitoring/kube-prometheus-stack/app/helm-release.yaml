---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 45.0.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  values:
    fullnameOverride: prometheus
    alertmanager:
      tplConfig: true
      enabled: true
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: heartbeat
            webhook_configs:
              - url: http://localhost:3000/api/push/{{ .Values.alertmanager.secrets.uptime_kuma_token }}?status=up&msg=OK
                send_resolved: true
          - name: "null"
          - name: "pushover"
            pushover_configs:
              - token: "{{ .Values.alertmanager.secrets.pushover_token }}"
                user_key: "{{ .Values.alertmanager.secrets.pushover_user_key }}"
                send_resolved: true
                html: true
                sound: gamelan
                priority: |-
                  {{- `
                    {{ if eq .Status "firing" }}1{{ else }}0{{ end }}
                  `}}
                title: |-
                  {{- `
                    [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}
                  `}}
                message: |-
                  {{- `
                    {{- range .Alerts }}
                      {{- if ne .Labels.severity "" }}
                        <b>Severity:</b> <i>{{ .Labels.severity }}</i>
                      {{- else }}
                        <b>Severity:</b> <i>N/A</i>
                      {{- end }}
                      {{- if ne .Annotations.description "" }}
                        <b>Description:</b> <i>{{ .Annotations.description }}</i>
                      {{- else if ne .Annotations.summary "" }}
                        <b>Summary:</b> <i>{{ .Annotations.summary }}</i>
                      {{- else if ne .Annotations.message "" }}
                        <b>Message:</b> <i>{{ .Annotations.message }}</i>
                      {{- else }}
                        <b>Description:</b> <i>N/A</i>
                      {{- end }}
                      {{- if gt (len .Labels.SortedPairs) 0 }}
                        <b>Details:</b>
                        {{- range .Labels.SortedPairs }}
                          â€¢ <b>{{ .Name }}:</b> <i>{{ .Value }}</i>
                        {{- end }}
                      {{- end }}
                    {{- end }}
                  `}}
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: pushover
          routes:
            - receiver: heartbeat
              group_wait: 0s
              group_interval: 2m
              repeat_interval: 2m
              matchers:
                - alertname =~ "Watchdog"
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor"
            - receiver: pushover
              matchers:
                - severity = "critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          auth.home.arpa/enabled: "true"
          hajimari.io/icon: akar-icons:circle-alert
          hajimari.io/group: system management
          hajimari.io/appName: alertmanager
        hosts:
          - &am-host alert-manager.${SECRET_CLUSTER_DOMAIN}
        tls:
          - hosts:
              - *am-host
      alertmanagerSpec:
        replicas: 3
        containers:
          - name: uptime-kuma-proxy
            image: ghcr.io/mchestr/alertmanager-uptime-kuma-proxy:v0.1.3
            env:
              - name: UPTIME_KUMA_BASE_URL
                value: https://status.${SECRET_CLUSTER_DOMAIN}
            ports:
              - containerPort: 3000
                name: proxy
                protocol: TCP
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 1Gi
    grafana:
      enabled: false
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeApiServer:
      enabled: true
    kubeStateMetrics:
      enabled: true
    coreDns:
      enabled: true
    nodeExporter:
      enabled: true
      serviceMonitor:
        relabelings:
          - action: replace
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    # Setting this option to 0 disabled CPU limits
    prometheusOperator:
      configReloaderCpu: 0
      serviceMonitor:
        sampleLimit: 0
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          auth.home.arpa/enabled: "true"
          hajimari.io/icon: simple-icons:prometheus
          hajimari.io/group: storage, database, and messaging
          hajimari.io/appName: prometheus
        hosts:
          - &host prometheus.${SECRET_CLUSTER_DOMAIN}
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        retentionSize: 6GB
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 40Gi
        thanos:
          image: quay.io/thanos/thanos:v0.30.2
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.30.2"
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
        additionalScrapeConfigs:
          - job_name: node-exporter-http
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                  - lochnas.${SECRET_CLUSTER_DOMAIN}:9100
            relabel_configs:
              - target_label: job
                replacement: node-exporter

        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                        - k8s-2

  valuesFrom:
    - targetPath: alertmanager.secrets.pushover_user_key
      kind: Secret
      name: alertmanager-secret
      valuesKey: pushover_user_key
    - targetPath: alertmanager.secrets.pushover_token
      kind: Secret
      name: alertmanager-secret
      valuesKey: pushover_token
    - targetPath: alertmanager.secrets.uptime_kuma_token
      kind: Secret
      name: alertmanager-secret
      valuesKey: uptime_kuma_token
