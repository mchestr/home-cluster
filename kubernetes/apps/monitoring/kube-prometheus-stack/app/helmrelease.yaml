---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
    namespace: monitoring
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    crds:
      enabled: true
      upgradeJob:
        enabled: true
        forceConflicts: true
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      route:
        main:
          enabled: true
          hostnames: ["alertmanager.chestr.dev"]
          annotations:
            gethomepage.dev/enabled: "true"
            gethomepage.dev/icon: alertmanager.png
            gethomepage.dev/name: Alert-Manager
            gethomepage.dev/group: Monitoring
            gethomepage.dev/pod-selector: app.kubernetes.io/name=alertmanager
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https
      alertmanagerSpec:
        alertmanagerConfiguration:
          name: alertmanager
          global:
            resolveTimeout: 5m
        externalUrl: https://alertmanager.chestr.dev
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 1Gi
    kubeEtcd:
      service:
        selector:
          component: kube-apiserver # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    prometheus:
      route:
        main:
          enabled: true
          hostnames:
            - prometheus.chestr.dev
          annotations:
            gethomepage.dev/enabled: "true"
            gethomepage.dev/icon: prometheus.png
            gethomepage.dev/name: Prometheus
            gethomepage.dev/group: Monitoring
            gethomepage.dev/pod-selector: app.kubernetes.io/name=prometheus
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        retention: 14d
        retentionSize: 50GB
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 8Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 50Gi
        thanos:
          image: quay.io/thanos/thanos:v0.37.2
          objectStorageConfig:
            existingSecret:
              name: thanos-objstore-secret
              key: objstore.yml
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.37.2"

      thanosService:
        enabled: true

      thanosServiceMonitor:
        enabled: true

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus: &prometheus
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        <<: *prometheus
    grafana:
      enabled: false
      forceDeployDashboards: true
    additionalPrometheusRulesMap:
      dockerhub-rules:
        groups:
          - name: dockerhub
            rules:
              - alert: DockerhubRateLimitRisk
                annotations:
                  summary: Kubernetes cluster Dockerhub rate limit risk
                expr: count(time() - container_last_seen{image=~"(docker.io).*",container!=""} < 30) > 100
                labels:
                  severity: critical
      oom-rules:
        groups:
          - name: oom
            rules:
              - alert: OomKilled
                annotations:
                  summary: Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
                expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
                labels:
                  severity: critical
