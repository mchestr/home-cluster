---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 51.2.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: prometheus
    alertmanager:
      tplConfig: true
      enabled: true
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: heartbeat
            webhook_configs:
              - url: http://localhost:3000/api/push/{{ .Values.alertmanager.secrets.uptime_kuma_token }}?status=up&msg=OK
                send_resolved: true
          - name: "null"
          - name: "pushover"
            pushover_configs:
              - token: "{{ .Values.alertmanager.secrets.pushover_token }}"
                user_key: "{{ .Values.alertmanager.secrets.pushover_user_key }}"
                send_resolved: true
                html: true
                sound: gamelan
                priority: |-
                  {{- `
                    {{ if eq .Status "firing" }}1{{ else }}0{{ end }}
                  `}}
                title: |-
                  {{- `
                    [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}
                  `}}
                message: |-
                  {{- `
                    {{- range .Alerts }}
                      {{- if ne .Labels.severity "" }}
                        <b>Severity:</b> <i>{{ .Labels.severity }}</i>
                      {{- else }}
                        <b>Severity:</b> <i>N/A</i>
                      {{- end }}
                      {{- if ne .Annotations.description "" }}
                        <b>Description:</b> <i>{{ .Annotations.description }}</i>
                      {{- else if ne .Annotations.summary "" }}
                        <b>Summary:</b> <i>{{ .Annotations.summary }}</i>
                      {{- else if ne .Annotations.message "" }}
                        <b>Message:</b> <i>{{ .Annotations.message }}</i>
                      {{- else }}
                        <b>Description:</b> <i>N/A</i>
                      {{- end }}
                      {{- if gt (len .Labels.SortedPairs) 0 }}
                        <b>Details:</b>
                        {{- range .Labels.SortedPairs }}
                          â€¢ <b>{{ .Name }}:</b> <i>{{ .Value }}</i>
                        {{- end }}
                      {{- end }}
                    {{- end }}
                  `}}
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: pushover
          routes:
            - receiver: heartbeat
              group_wait: 0s
              group_interval: 2m
              repeat_interval: 2m
              matchers:
                - alertname =~ "Watchdog"
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor"
            - receiver: pushover
              matchers:
                - severity = "critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: internal
        annotations:
          auth.home.arpa/enabled: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: alertmanager.png
          gethomepage.dev/name: Alert-Manager
          gethomepage.dev/group: Monitoring
        hosts:
          - &am-host alert-manager.chestr.dev
        tls:
          - hosts:
              - *am-host
      alertmanagerSpec:
        replicas: 2
        containers:
          - name: uptime-kuma-proxy
            image: ghcr.io/mchestr/alertmanager-uptime-kuma-proxy:v0.1.6
            env:
              - name: UPTIME_KUMA_BASE_URL
                value: https://status.chestr.dev
            ports:
              - containerPort: 3000
                name: proxy
                protocol: TCP
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              resources:
                requests:
                  storage: 1Gi
    grafana:
      enabled: false

    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      resources:
        requests:
          cpu: 23m
          memory: 64M
        limits:
          memory: 64M

      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate metrics
          - sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)"
            action: keep
          - sourceLabels: ["node"]
            targetLabel: instance
            action: replace
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate metrics
          - sourceLabels: ["__name__"]
            regex: "(aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)"
            action: keep
          - sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
            action: drop
          - sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
            action: drop
    coreDns:
      enabled: true

    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      resources:
        requests:
          cpu: 15m
          memory: 127M
        limits:
          memory: 153M

    # Setting this option to 0 disabled CPU limits
    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M

      prometheusConfigReloader:
        # resource config for prometheusConfigReloader
        resources:
          requests:
            cpu: 11m
            memory: 32M
          limits:
            memory: 32M

    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          auth.home.arpa/enabled: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: prometheus.png
          gethomepage.dev/name: Prometheus
          gethomepage.dev/group: Storage
        hosts:
          - &host prometheus.chestr.dev
        tls:
          - hosts:
              - *host

      prometheusSpec:
        additionalScrapeConfigs:
          - job_name: node-exporter
            static_configs:
              - targets:
                  - lochnas.chestr.dev:9100
                  - pikvm.chestr.dev:9100
        enableAdminAPI: true
        externalLabels:
          cluster: cluster-0
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        replicas: 1
        replicaExternalLabelName: "__replica__" # must match with thanos value `.query.replicaLabel[0]`
        walCompression: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        retention: 2d
        retentionSize: 15GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              resources:
                requests:
                  storage: 20Gi
        resources:
          requests:
            cpu: 587m
            memory: 4993M
          limits:
            memory: 5977M
        thanos:
          image: quay.io/thanos/thanos:v0.31.0@sha256:e7d337d6ac2aea3f0f9314ec9830291789e16e2b480b9d353be02d05ce7f2a7e
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.31.0"

      thanosService:
        enabled: true

      thanosServiceMonitor:
        enabled: true

  valuesFrom:
    - targetPath: alertmanager.secrets.pushover_user_key
      kind: Secret
      name: alertmanager-secret
      valuesKey: pushover_user_key
    - targetPath: alertmanager.secrets.pushover_token
      kind: Secret
      name: alertmanager-secret
      valuesKey: pushover_token
    - targetPath: alertmanager.secrets.uptime_kuma_token
      kind: Secret
      name: alertmanager-secret
      valuesKey: uptime_kuma_token
