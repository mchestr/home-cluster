---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.13.2
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      remediateLastFailure: true
  uninstall:
    keepHistory: false
  values:
    toolbox:
      enabled: false

    monitoring:
      enabled: true
      createPrometheusRules: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      mon_data_avail_warn = 15

    cephClusterSpec:
      network:
        provider: host
        connections:
          requireMsgr2: true

      crashCollector:
        disable: true

      dashboard:
        enabled: true
        urlPrefix: /
        ssl: true

      resources:
        mgr:
          limits:
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "256Mi"
        mon:
          limits:
            memory: "2Gi"
          requests:
            cpu: "100m"
            memory: "500Mi"
        osd:
          limits:
            memory: "4Gi"
          requests:
            memory: "2Gi"
        prepareosd:
          limits:
            memory: "900Mi"
          requests:
            cpu: "100m"
            memory: "50Mi"
        mgr-sidecar:
          limits:
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "40Mi"
        crashcollector:
          limits:
            memory: "60Mi"
          requests:
            cpu: "100m"
            memory: "60Mi"
        logcollector:
          limits:
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "k8s-0"
            devices:
              - name: "/dev/disk/by-id/nvme-SPCC_M.2_PCIe_SSD_AA221020NV051201345"
          - name: "k8s-5"
            devices:
              - name: "/dev/disk/by-id/nvme-SPCC_M.2_PCIe_SSD_AA221020NV051200709"
          - name: "k8s-3"
            devices:
              - name: "/dev/disk/by-id/nvme-SPCC_M.2_PCIe_SSD_AA221020NV051200243"

    ingress:
      dashboard:
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: ceph.png
          gethomepage.dev/name: Rook-Ceph
          gethomepage.dev/group: Storage

        host:
          name: &host "rook.chestr.dev"
          path: "/"
        tls:
          - hosts:
              - *host

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems: []

    cephObjectStores: []
