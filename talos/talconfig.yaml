clusterName: &cluster ${clusterName}
# renovate: datasource=github-releases depName=siderolabs/talos
talosVersion: "v1.9.3"
# renovate: datasource=github-releases depName=siderolabs/kubelet
kubernetesVersion: "v1.32.1"

endpoint: https://${clusterEndpointIP}:6443
allowSchedulingOnMasters: true

cniConfig:
  name: none

additionalApiServerCertSans: &sans
  - ${clusterName}.chestr.dev
  - "127.0.0.1"  #kubeprism

additionalMachineCertSans: *sans

nodes:
  - hostname: k8s-0
    ipAddress: 192.168.1.200
    controlPlane: true
    installDiskSelector:
      model: KINGSTON SA400S3
    networkInterfaces:
      - deviceSelector:
          driver: e1000e
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
        vlans:
          - &vlan10
            vlanId: 10
            mtu: 1500
            dhcp: true
            dhcpOptions:
              routeMetric: 4096
    schematic: &schematic
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/i915
            - siderolabs/intel-ucode
            - siderolabs/nut-client

  - hostname: k8s-1
    ipAddress: 192.168.1.201
    controlPlane: true
    installDiskSelector:
      model: SAMSUNG MZ7LN256
    networkInterfaces:
      - deviceSelector:
          driver: e1000e
        vip:
          ip: ${clusterEndpointIP}
        dhcp: true
        vlans:
          - *vlan10
    schematic: *schematic

  - hostname: k8s-2
    ipAddress: 192.168.1.202
    controlPlane: false
    installDiskSelector:
      model: WDC WDS250G2B0A-
    networkInterfaces:
      - deviceSelector:
          driver: r8169
        dhcp: true
        vlans:
          - *vlan10
    schematic: *schematic

  - hostname: k8s-3
    ipAddress: 192.168.1.203
    controlPlane: true
    installDiskSelector:
      model: KingFast
    networkInterfaces:
      - deviceSelector:
          driver: e1000e
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
        vlans:
          - *vlan10
    schematic: *schematic

  - hostname: k8s-4
    ipAddress: 192.168.1.204
    controlPlane: false
    installDiskSelector:
      model: CT500MX500SSD1
    networkInterfaces:
      - deviceSelector:
          driver: e1000e
        dhcp: true
        vlans:
          - *vlan10
    schematic: *schematic

  - hostname: k8s-5
    ipAddress: 192.168.1.205
    controlPlane: false
    installDiskSelector:
      model: SanDisk SD7TB6S2
    networkInterfaces:
      - deviceSelector:
          driver: r8169
        dhcp: true
        vlans:
          - *vlan10
    schematic: *schematic

  - hostname: k8s-6
    ipAddress: 192.168.1.206
    controlPlane: false
    installDiskSelector:
      model: Samsung SSD 950 PRO 256GB
    networkInterfaces:
      - deviceSelector:
          driver: alx
        dhcp: true
        vlans:
          - *vlan10
    schematic:
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/i915
            - siderolabs/intel-ucode
            - siderolabs/nonfree-kmod-nvidia-production
            - siderolabs/nut-client
            - siderolabs/nvidia-container-toolkit-production
    patches:
      - |-
        - op: add
          path: /machine/kernel
          value:
            modules:
              - name: nvidia
              - name: nvidia_uvm
              - name: nvidia_drm
              - name: nvidia_modeset
      - |-
        - op: add
          path: /machine/sysctls
          value:
            net.core.bpf_jit_harden: 1

controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: control-plane

  extensionServices: &extensionServices
    - name: nut-client
      configFiles:
        - mountPath: /usr/local/etc/nut/upsmon.conf
          content: |
            MONITOR ups@192.168.1.128 1 ${upsmonUser} ${upsmonPasswd} slave
            SHUTDOWNCMD "/sbin/poweroff"

  patches:
    # Disable search domain everywhere
    - &disableSearchDomainsPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Disable Host DNS
    - &hostDnsPatch |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - time.cloudflare.com

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    - &discoveryPatch |-
      cluster:
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: true
            service:
              disabled: false

    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192
          kernel.randomize_va_space: 0
          net.core.netdev_max_backlog: 30000
          net.core.rmem_max: 67108864
          net.core.wmem_max: 67108864
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_tw_reuse: 1
          net.ipv4.tcp_window_scaling: 1

    # Kubelet configuration
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 192.168.1.0/24

    # Configure local-path CSI directory
    - &localpathPatch |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/localpath
              type: bind
              source: /var/localpath
              options:
                - rbind
                - rshared
                - rw

    # Configure cluster loopback
    - |-
      machine:
        network:
          extraHostEntries:
            - ip: ${clusterEndpointIP}
              aliases:
                - ${clusterName}.chestr.dev

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        proxy:
          disabled: true
        coreDNS:
          disabled: true

    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 192.168.1.0/24

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - kube-system

worker:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: worker

  extensionServices: *extensionServices
  patches:
    - *disableSearchDomainsPatch
    - *hostDnsPatch
    - *ntpPatch
    - *kubePrismPatch
    - *containerdPatch
    - *discoveryPatch
    - *kubeletPatch
    - *sysctlPatch
    - *localpathPatch
