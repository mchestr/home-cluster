---
cluster:
  name: cluster
  id: "1"

autoDirectNodeRoutes: true
ipv4NativeRoutingCIDR: 10.244.0.0/16
k8sServiceHost: cluster.chestr.dev
k8sServicePort: 6443
kubeProxyReplacement: strict
localRedirectPolicy: true
rollOutCiliumPods: true
tunnel: disabled

bgp:
  announce:
    loadbalancerIP: true
  enabled: false

containerRuntime:
  integration: containerd

endpointRoutes:
  enabled: true

ipam:
  mode: kubernetes

loadBalancer:
  algorithm: maglev
  mode: dsr

cgroup:
  autoMount:
    enabled: false
  hostRoot: "/sys/fs/cgroup"

operator:
  rollOutPods: true

securityContext:
  privileged: true
  capabilities:
    ciliumAgent: "{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}"
    cleanCiliumState: "{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}"

hubble:
  enabled: true
  serviceMonitor:
    enabled: true
  metrics:
    enabled:
      - dns:query;ignoreAAAA
      - drop
      - tcp
      - flow
      - port-distribution
      - icmp
      - http
  relay:
    enabled: true
    rollOutPods: true
  ui:
    enabled: true
    rollOutPods: true
    ingress:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hajimari.io/group: system management
        hajimari.io/appName: cilium
        hajimari.io/icon: simple-icons:cilium
        nginx.ingress.kubernetes.io/auth-method: GET
        nginx.ingress.kubernetes.io/auth-url: |-
          http://authelia.default.svc.cluster.local/api/verify
        nginx.ingress.kubernetes.io/auth-signin: |-
          https://auth.chestr.dev?rm=$request_method
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Method $request_method;
      hosts:
        - hubble.chestr.dev
