---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: database-system
spec:
  interval: 15m
  chart:
    spec:
      chart: minio
      version: 11.7.5
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    envFrom:
      - secretRef:
          name: minio-secrets
    env:
      TZ: ${TZ}
      MINIO_PROMETHEUS_URL: http://prometheus-prometheus.monitoring:9090
      MINIO_PROMETHEUS_JOB_ID: minio
      MINIO_UPDATE: "off"
      MINIO_BROWSER_REDIRECT_URL: https://minio.${CLUSTER_DOMAIN}
      MINIO_SERVER_URL: https://s3.${CLUSTER_DOMAIN}
    auth:
      existingSecret: minio-secrets
    defaultBuckets: thanos, loki
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: networking-internal@kubernetescrd
      hostname: &consoleHost "minio.${CLUSTER_DOMAIN}"
      tls: true
      extraTls:
        - hosts:
            - *consoleHost
    apiIngress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: networking-internal@kubernetescrd
      hostname: &apiHost "s3.${CLUSTER_DOMAIN}"
      tls: true
      extraTls:
        - hosts:
            - *apiHost
    podSecurityContext:
      enabled: true
      fsGroup: ${FS_GROUP}
    persistence:
      enabled: true
      existingClaim: minio-pvc
    prometheus:
      servicemonitor:
        enabled: true
