---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.1.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/onedr0p/bazarr
      tag: 1.1.3@sha256:cb66a9c52516c80dbc5482774db37bb8eb60c934f9e02dde6b6167eb195705bb

    env:
      TZ: ${TZ}
      BAZARR__INSTANCE_NAME: Bazarr
      BAZARR__PORT: &port 6767
      BAZARR__LOG_LEVEL: info

    envFrom:
      - secretRef:
          name: *app

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          auth.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_CLUSTER_DOMAIN}/css/base/bazarr/nord.css"></head>';
            sub_filter_once on;
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:subtitles-outline
          hajimari.io/group: Media Management
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: bazarr-config-v1
      media:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: ${NAS_MEDIA_DIR}
        mountPath: /media
      backup:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: ${NAS_BACKUP_DIR}/bazarr
        mountPath: /config/backup

    podSecurityContext:
      fsGroup: ${RUN_AS_GROUP}
      fsGroupChangePolicy: OnRootMismatch

    podAnnotations:
      secret.reloader.stakater.com/reload: *app
