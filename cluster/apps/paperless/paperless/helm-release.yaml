---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      version: 8.6.1
      chart: paperless
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  valuesFrom:
    - kind: Secret
      name: paperless-secrets
  values:
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 1.6.0
    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_ALLOWED_HOSTS: paperless.${CLUSTER_DOMAIN}
      PAPERLESS_CONSUMER_POLLING: 5
      PAPERLESS_CORS_ALLOWED_HOSTS: https://paperless.${CLUSTER_DOMAIN}
      PAPERLESS_OCR_LANGUAGE: eng
      PAPERLESS_PORT: 8000
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
      PAPERLESS_TIME_ZONE: ${TZ}
    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/icon: attachment
          kubernetes.io/ingress.class: traefik
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: kube-system-traefik-forward-auth@kubernetescrd
        hosts:
          - host: "{{ .Release.Name }}.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - "{{ .Release.Name }}.${CLUSTER_DOMAIN}"

    persistence:
      data:
        enabled: true
        existingClaim: paperless-data-pv-claim
      media:
        enabled: true
        existingClaim: paperless-media-pv-claim
    podSecurityContext:
      fsGroup: ${FS_GROUP}
    additionalContainers:
      gotenburg:
        name: gotenburg
        image: thecodingmachine/gotenberg:7.5.2
        env:
          - name: DISABLE_GOOGLE_CHROME
            value: "1"
      tika:
        image: apache/tika:2.3.0
        name: tika
        imagePullPolicy: Always
    redis:
      enabled: true
      global:
        storageClass: longhorn
      image:
        repository: bitnami/redis
        tag: 6.2.6-debian-10-r169
      architecture: "standalone"
      auth:
        enabled: false
    service:
      gotenburg:
        enabled: true
        primary: false
        ports:
          gotenburg:
            enabled: true
            primary: false
            port: 3000
      tika:
        enabled: true
        primary: false
        ports:
          tika:
            enabled: true
            primary: false
            port: 9998
