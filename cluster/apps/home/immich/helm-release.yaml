---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app immich
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: postgres
      namespace: database-system
    - name: redis
      namespace: database-system
  values:
    image:
      repository: altran1502/immich-web
      tag: release@sha256:42d0c892895a587ded57639ebe9671853a9fb439fa75643605caa25e737e4eeb

    envFrom:
      - secretRef:
          name: *app

    service:
      main:
        ports:
          http:
            port: 3000
      server:
        enabled: true
        ports:
          server:
            enabled: true
            port: &server-port 3001
      microservices:
        enabled: true
        ports:
          microservices:
            enabled: true
            port: 3002
      machine-learning:
        enabled: true
        ports:
          ml:
            enabled: true
            port: 3003

    command:
      - "/bin/sh"
      - "./entrypoint.sh"

    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-internal@kubernetescrd,home-strip-prefix-api@kubernetescrd
          hajimari.io/enable: "true"
          hajimari.io/icon: heroicons:photo
          hajimari.io/group: Home
          hajimari.io/appName: Photos
        hosts:
          - host: &host "{{ .Release.Name }}.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
                service:
                  name: immich-server
                  port: *server-port
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host

    persistence:
      data:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: ${NAS_MEDIA_DIR}/photos
        mountPath: /usr/src/app/upload

    podSecurityContext:
      fsGroup: ${FS_GROUP}
      fsGroupChangePolicy: OnRootMismatch

    additionalContainers:
      immich-machine-learning:
        name: immich-machine-learning
        image: altran1502/immich-machine-learning:release@sha256:e52387c1d8a3065aed35088adf62fdb70e159d7b707bb30276fa86321b3dd5b9

        command:
          - "/bin/sh"
          - "./entrypoint.sh"

        env:
          NODE_ENV: production

        envFrom:
          - secretRef:
              name: *app

        volumeMounts:
          - name: data
            mountPath: /usr/src/app/upload

      microservices:
        name: immich-microservices
        image: altran1502/immich-server:release@sha256:afff304c82c35058c2f399b6521ee5a251387cb7f06a81f1dd64968c6bd4b7ca

        command:
          - "/bin/sh"
          - "./start-microservices.sh"

        env:
          NODE_ENV: production

        envFrom:
          - secretRef:
              name: *app

        volumeMounts:
          - name: data
            mountPath: /usr/src/app/upload

      server:
        name: immich-server
        image: altran1502/immich-server:release@sha256:afff304c82c35058c2f399b6521ee5a251387cb7f06a81f1dd64968c6bd4b7ca

        command:
          - "/bin/sh"
          - "./start-server.sh"

        env:
          NODE_ENV: production

        envFrom:
          - secretRef:
              name: *app

        volumeMounts:
          - name: data
            mountPath: /usr/src/app/upload
