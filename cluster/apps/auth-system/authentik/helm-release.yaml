---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: auth-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2022.8.2
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  dependsOn:
    - name: postgres
      namespace: database-system
    - name: redis
      namespace: database-system
  valuesFrom:
    - kind: Secret
      name: authentik-secrets-helm
  values:
    fullnameOverride: authentik
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.8.2

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns.alpha.kubernetes.io/target: ipv4.${CLUSTER_DOMAIN}
        external-dns/is-public: "true"
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: networking-external@kubernetescrd
      hosts:
        - host: &host outpost.${CLUSTER_DOMAIN}
          paths:
            - path: /
      tls:
        - secretName: authentik-tls
          hosts:
            - *host

    authentik:
      log_level: debug
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      postgresql:
        host: postgres.database-system
        name: ${AUTHENTIK_DATABASE_NAME}
        user: ${AUTHENTIK_DATABASE_USER}
        password: ${AUTHENTIK_DATABASE_PASSWORD}
      email:
        host: ${SMTP_HOST}
        port: ${SMTP_PORT}
        username: ${SMTP_USERNAME}
        password: ${SMTP_PASSWORD}
        use_ssl: true
        from: outpost@${CLUSTER_DOMAIN}
      redis:
        host: redis-headless.database-system

    postgresql:
      enabled: false
    redis:
      enabled: false

    prometheus:
      rules:
        create: true
      serviceMonitor:
        create: true
