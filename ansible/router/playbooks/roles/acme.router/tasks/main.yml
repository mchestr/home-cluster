---
- name: Create ACME directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    recurse: yes
  loop:
    - /config/scripts
    - /config/.acme.sh

- name: Download acme scripts
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/acmesh-official/acme.sh/master/acme.sh
    dest: /config/.acme.sh/acme.sh
    mode: 0755

- name: Copy renew.acme.sh
  ansible.builtin.copy:
    src: renew.acme.sh
    dest: /config/scripts/renew.acme.sh
    mode: 0755

- name: register status of /config/ssl/server.pem
  stat:
    path: /config/ssl/server.pem
  register: server_pem_path

- name: register status of /config/ssl/ca.pem
  stat:
    path: /config/ssl/ca.pem
  register: ca_pem_path

- name: Get initial certs
  when: not (server_pem_path.stat.exists or ca_pem_path.stat.exists)
  command: sh /config/scripts/renew.acme.sh -d dns.{{ cluster_domain }}

- name: Configure EdgeOS
  vars:
    ansible_network_os: edgeos
    ansible_connection: network_cli
  block:
    - name: Configure task scheduler
      community.network.edgeos_config:
        save: true
        backup: true
        lines:
          - set system task-scheduler task renew.acme interval 1d
          - set system task-scheduler task renew.acme executable path /config/scripts/renew.acme.sh
          - set system task-scheduler task renew.acme executable arguments "-d dns.{{ cluster_domain }}"
    - name: Configure gui
      community.network.edgeos_config:
        save: true
        backup: true
        lines:
          - set service gui cert-file /config/ssl/server.pem
          - set service gui ca-file /config/ssl/ca.pem
          - set system static-host-mapping host-name dns.{{ cluster_domain }} inet 192.168.1.1
