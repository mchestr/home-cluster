---
version: "3"

vars:
  N: '{{ .N | default "0" }}'
  NODES: '{{.NODES | default "192.168.1.200,192.168.1.201,192.168.1.202,192.168.1.203"}}'
  NODE:
    sh: 'echo ${NODE:-192.168.1.20{{ .N }}}'
  # renovate: datasource=github-releases depName=siderolabs/talos
  TALOS_VERSION: "v1.3.2"
  # renovate: datasource=github-releases depName=budimanjojo/talhelper
  TALHELPER_VERSION: "v1.5.6"

tasks:

  init:
    desc: Init talosctl and grab kubeconfig
    cmds:
      - mkdir config || true
      - sudo curl -Lo /usr/local/bin/talosctl https://github.com/siderolabs/talos/releases/download/{{.TALOS_VERSION}}/talosctl-$(uname -s | tr "[:upper:]" "[:lower:]")-$(uname -m) && sudo chmod +x /usr/local/bin/talosctl
      - curl -Lo /tmp/talhelper-{{.TALHELPER_VERSION}}.tar.gz https://github.com/budimanjojo/talhelper/releases/download/{{.TALHELPER_VERSION}}/talhelper_$(uname -s | tr "[:upper:]" "[:lower:]")_$(uname -m).tar.gz && tar -xzf /tmp/talhelper-{{.TALHELPER_VERSION}}.tar.gz -C /tmp && sudo mv /tmp/talhelper /usr/local/bin/talhelper
      - task: generate
      - talosctl --talosconfig=talos/clusterconfig/talosconfig kubeconfig --nodes 192.168.1.200 $KUBECONFIG

  generate:
    desc: Generate Talos machine configurations
    dir: talos
    cmds:
      - talhelper genconfig

  apply:
    desc: Apply Talos config to a specific node (task talos:apply N=0)
    dir: talos
    cmds:
      - talosctl apply-config --nodes {{.NODE}} --file clusterconfig/home-cluster-k8s-{{.N}}.yaml {{.CLI_ARGS}}

  upgrade:
    desc: Upgrade Talos OS to latest
    dir: talos
    cmds:
      # Upgrade control-plane then workers, ensure rook-ceph cluster is healthy before each upgrade.
      # First generate the latest config, then stage it before upgrade so it gets applied.
      - task: generate
      - kubectl -n rook-ceph wait --for jsonpath='{.status.ceph.health}'='HEALTH_OK' --timeout 10m cephcluster rook-ceph

      # k8s-0 (cp)
      - talosctl apply-config --nodes 192.168.1.200 --file clusterconfig/home-cluster-k8s-0.yaml -m staged
      - talosctl upgrade --nodes 192.168.1.200 --image ghcr.io/siderolabs/installer:{{ .TALOS_VERSION }}
      - kubectl -n rook-ceph wait --for jsonpath='{.status.ceph.health}'='HEALTH_OK' --timeout 10m cephcluster rook-ceph

      # k8s-1 (cp)
      - talosctl apply-config --nodes 192.168.1.201 --file clusterconfig/home-cluster-k8s-1.yaml -m staged
      - talosctl upgrade --nodes 192.168.1.201 --image ghcr.io/siderolabs/installer:{{ .TALOS_VERSION }}
      - kubectl -n rook-ceph wait --for jsonpath='{.status.ceph.health}'='HEALTH_OK' --timeout 10m cephcluster rook-ceph

      # k8s-3 (cp)
      - talosctl apply-config --nodes 192.168.1.203 --file clusterconfig/home-cluster-k8s-3.yaml -m staged
      - talosctl upgrade --nodes 192.168.1.203 --image ghcr.io/siderolabs/installer:{{ .TALOS_VERSION }}
      - kubectl -n rook-ceph wait --for jsonpath='{.status.ceph.health}'='HEALTH_OK' --timeout 10m cephcluster rook-ceph

      # k8s-2 (worker)
      - talosctl apply-config --nodes 192.168.1.202 --file clusterconfig/home-cluster-k8s-2.yaml -m staged
      - talosctl upgrade --nodes 192.168.1.202 --image ghcr.io/siderolabs/installer:{{ .TALOS_VERSION }}

      # Finally, wait for ceph cluster to be OK
      - kubectl -n rook-ceph wait --for jsonpath='{.status.ceph.health}'='HEALTH_OK' --timeout 10m cephcluster rook-ceph

  memory:
    desc: Get all nodes memory
    dir: talos
    cmds:
      - talosctl --nodes {{.NODES}} memory {{.CLI_ARGS}}

  stats:
    desc: Get all nodes stats
    dir: talos
    cmds:
      - talosctl --nodes {{.NODES}} stats {{.CLI_ARGS}}

  time:
    desc: Get all nodes time
    dir: talos
    cmds:
      - talosctl --nodes {{.NODES}} time {{.CLI_ARGS}}

  services:
    desc: Get all nodes services
    dir: talos
    cmds:
      - talosctl --nodes {{.NODES}} services {{.CLI_ARGS}}

  health:
    desc: Get cluster health
    dir: talos
    cmds:
      - talosctl --nodes {{.NODE}} health {{.CLI_ARGS}}

  dashboard:
    desc: Get all nodes dashboard
    dir: talos
    cmds:
      - talosctl --nodes {{.NODE}} dashboard {{.CLI_ARGS}}
