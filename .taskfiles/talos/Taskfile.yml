---
version: "3"

vars:
  N: '{{ .N | default "0" }}'
  NODE:
    sh: 'echo ${NODE:-192.168.1.20{{ .N }}}'
  NODE_NUMBERS: 0 1 2 3 4 5 6

tasks:

  apply:
    desc: Apply Talos config to a specific node (task talos:apply N=0)
    dir: talos
    status:
      - test -n "{{ .SKIP_APPLY }}"
    cmds:
      - task: generate
      - talosctl apply-config --nodes {{ .NODE }} --file clusterconfig/home-cluster-k8s-{{ .N }}.yaml {{ .CLI_ARGS }}

  apply:all:
    desc: Apply Talos config to all nodes
    dir: talos
    cmds:
      - for:
          var: NODE_NUMBERS
        task: apply
        vars:
          NODE: 'k8s-{{ .ITEM }}'
          N: '{{ .ITEM }}'

  generate:
    desc: Generate Talos machine configurations (task talos:generate)
    dir: talos
    cmds:
      - talhelper genconfig --env-file talenv.sops.yaml --secret-file talsecret.sops.yaml --config-file talconfig.yaml
    sources:
      - talconfig.yaml
      - talenv.sops.yaml
      - talenv.yaml
      - talsecret.sops.yaml
    generates:
      - clusterconfig/*.yaml
      - clusterconfig/talosconfig

  version:
    desc: Apply Talos config to a specific node (task talos:version [N=0])
    dir: talos
    cmds:
      - for:
          var: NODE_NUMBERS
        cmd: talosctl version --nodes 192.168.1.20{{ .ITEM }} --short | grep Tag | awk '{print $2}'
